#ifndef __XIANSHI_H__
#define __XIANSHI_H__

#include<reg52.h>
#define uchar unsigned char
#define uint unsigned int
#define LCD_Data P0
sbit rs=P1^0;
sbit rw=P1^1;
sbit lcden=P2^5;
sbit dula=P2^6;
sbit wela=P2^7;
uchar a[]={0x15,0x0A,0x15,0x0A,0x15,0x0A,0x15,0x0A};

void delay(uint x)
{
	uint a,b;
	for(a=x;a>0;a--)
		for(b=10;b>0;b--); 
}

void write_com(uchar com)
{
	rs=0;
	lcden=0;
    P0=com;
	delay(10);
	lcden=1;
	delay(10);
	lcden=0;
}
void write_date(uchar com)
{
	rs=1;
	lcden=0;
    P0=com;
	delay(10);
	lcden=1;
	delay(10);
	lcden=0;
}

void init()
{
    rw=0;
	dula=0;
	wela=0;
    write_com(0x38);
    delay(10);
    write_com(0x0c);//开显示，不显示光标，且不闪烁
    delay(10);
    write_com(0x06);//每次写入数据后地址指针加1
    delay(10);
    write_com(0x01);//清屏
    delay(10);
}

// void real()
// {
// 	uchar table1[]="1 2 3 4 5 6 7 8 9 1011121314151617181920";
// 	uchar table2[]="Heisenberg Heisenberg Heisenberg   AAA  ";
// 	uchar i;
// 	init();
// 	write_com(0x80);	 //将第一个字符写在向右偏移17个字符处，为后面的由右向左划入做准备。
// 	delay(10);	
// 	for(i=0;i<40;i++)
// 	{
// 	write_date(table1[i]);
// 	delay(10);		
// 	}

// 	write_com(0xc0);
// 	delay(10);
// 	for(i=0;i<40;i++)
// 	{
// 	write_date(table2[i]);
// 	delay(10);		
// 	}

// 	for(i=0;i<50;i++)
// 	{
// 		write_com(0x18); //左移
// 		delay(6000);
// 	}
// 	while(1);
// }

//--------------------------------------自定义
// void real()
// {
//     uint num;
//     init();
//     write_com(0x40);    //对CGRAM第一个自定义字符操作，若是第二个则为0x48，其次类推（上面有对顶的关系）
//     delay(20);
//     for(num=0;num<8;num++)
//     {
//         write_date(a[num]);
//         delay(20);
//     }
//     write_com(0x80);    //规定显示在第一行第一个位置
//     write_date(0x00);       //显示第一个自定义字符 （0x40对应第一个：0x00）
//     while(1);
// }

void real()
{
    uint num;
    init();

write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0xe);
write_date(0x10);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x18);
write_date(0x10);
write_date(0x10);
write_date(0x10);
write_date(0x10);
write_date(0x11);
write_date(0x11);
write_date(0x11);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x13);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x8);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x18);
write_date(0x10);
write_date(0x1);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x18);
write_date(0x18);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x19);
write_date(0x1d);
write_date(0x1d);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1d);
write_date(0x1d);
write_date(0x1d);
write_date(0x1d);
write_date(0x1c);
write_date(0xc);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x10);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x18);
write_date(0x10);
write_date(0x18);
write_date(0x1c);
write_date(0x1);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x19);
write_date(0x1b);
write_date(0x1b);
write_date(0x1d);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x1d);
write_date(0x1d);
write_date(0x1c);
write_date(0x1c);
write_date(0x8);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x18);
write_date(0x10);
write_date(0x10);
write_date(0x10);
write_date(0x18);
write_date(0x18);
write_date(0x3);
write_date(0x1);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x13);
write_date(0x1b);
write_date(0x1d);
write_date(0x1d);
write_date(0x1e);
write_date(0x1e);
write_date(0x18);
write_date(0x1a);
write_date(0x1b);
write_date(0x18);
write_date(0x18);
write_date(0x18);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x18);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x3);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x1b);
write_date(0x1b);
write_date(0x1d);
write_date(0x1d);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1b);
write_date(0x18);
write_date(0x10);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x10);
write_date(0x18);
write_date(0x1e);
write_date(0x1e);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x13);
write_date(0x1b);
write_date(0x1d);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x18);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x10);
write_date(0x10);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x18);
write_date(0x18);
write_date(0x18);
write_date(0x10);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x19);
write_date(0x19);
write_date(0x19);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0xf);
write_date(0x0);
write_date(0x1c);
write_date(0x1c);
write_date(0x1d);
write_date(0x1d);
write_date(0x1d);
write_date(0x1d);
write_date(0x10);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x3);
write_date(0x11);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x18);
write_date(0x18);
write_date(0x10);
write_date(0x0);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0xf);
write_date(0xf);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x3);
write_date(0x1);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x17);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1);
write_date(0x0);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x3);
write_date(0x1);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x10);
write_date(0x10);
write_date(0x0);
write_date(0x18);
write_date(0x18);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x7);
write_date(0x7);
write_date(0x3);
write_date(0x0);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x0);
write_date(0x18);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0x3);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1b);
write_date(0x19);
write_date(0x18);
write_date(0x18);
write_date(0x18);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0x6);
write_date(0x2);
write_date(0x0);
write_date(0x10);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x18);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x0);
write_date(0x0);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x3);
write_date(0x17);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1d);
write_date(0x18);
write_date(0x14);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x18);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x18);
write_date(0x1c);
write_date(0x7);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x1);
write_date(0x1);
write_date(0x1);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x19);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x10);
write_date(0x1b);
write_date(0x1f);
write_date(0x17);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x12);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1b);
write_date(0x0);
write_date(0x0);
write_date(0x0);
write_date(0x10);
write_date(0x10);
write_date(0x11);
write_date(0x1);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x1);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x4);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1e);
write_date(0x18);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0xf);
write_date(0xb);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x13);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x18);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x18);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x18);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x1d);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x17);
write_date(0x19);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x11);
write_date(0xe);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0xf);
write_date(0x3);
write_date(0x6);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1b);
write_date(0x1);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1d);
write_date(0x1c);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1d);
write_date(0x18);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0xf);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1c);
write_date(0x3);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x5);
write_date(0x1);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1e);
write_date(0xf);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1c);
write_date(0x1);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0xc);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0xf);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x10);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x2);
write_date(0x0);
write_date(0x3);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0xc);
write_date(0x0);
write_date(0x10);
write_date(0x10);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0xf);
write_date(0x7);
write_date(0x3);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1c);
write_date(0x10);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x1c);
write_date(0x1e);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x17);
write_date(0x0);
write_date(0x0);
write_date(0x1);
write_date(0x1);
write_date(0x1);
write_date(0x3);
write_date(0x17);
write_date(0x7);
write_date(0x7);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1e);
write_date(0x1e);
write_date(0x8);
write_date(0x10);
write_date(0x18);
write_date(0x1c);
write_date(0x1c);
write_date(0x1c);
write_date(0x7);
write_date(0x1);
write_date(0x1);
write_date(0x3);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x7);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x18);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
 write_com(0x40);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x18);
write_date(0x10);
write_date(0x10);
write_date(0x0);
write_date(0x10);
write_date(0x18);
write_date(0x1f);
write_date(0x7);
write_date(0xf);
write_date(0x7);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0xf);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x3);
write_date(0x1d);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
write_date(0x1f);
write_date(0x1d);
write_date(0x18);
write_date(0x10);
write_date(0x10);
write_date(0x1);
write_date(0x3);
write_date(0x13);
write_date(0x11);
write_date(0x1f);
write_date(0x17);
write_date(0x1f);
write_date(0xf);
write_date(0x1c);
write_date(0x1e);
write_date(0x1f);
write_date(0x1f);
    delay(300); 
   write_com(0x80);;   
 write_date(0x00);   
 write_date(0x01);
 write_date(0x02);
 write_date(0x03);
        delay(300); 
   write_com(0xc0);;   
 write_date(0x04);   
 write_date(0x05);
 write_date(0x06);
 write_date(0x07);
       
    while(1);
}


//----------------------判断忙
// void LCD_Check_Busy()
// {
// 	uchar temp;

// 	LCD_Data = 0xff;  // 十六进制：1111 1111
// 	rs = 0;  // 0 指令
//     delay(10);
// 	rw = 1;	 // 1 读
//     delay(10);

// 	do{
// 		lcden = 1;		  // 拉高
//         delay(10);
// 		temp = LCD_Data;  // 将 LCD 状态保存在 temp 中，用于判忙
// 		lcden = 0;		  // 负跳变使能 
//         delay(10);
// 	}while(temp & 0x80);  // 结果为 1，LCD 忙，继续循环；结果为 0，LCD 不忙，可以进行后面的操作
// }

//  bit LCD_Check_Busy(void) 
//  { 
//     LCD_Data = 0xff; 
//     rs = 0; 
//     rw = 1; 
//     lcden = 0; 
//     _nop_(); 
//     lcden = 1;
//     return (bit)(LCD_Data & 0x80);
//  }

//  void busy(void)
// { 
// 	uchar temp=0x80; //初始化temp最高位为1，使得能够进入下面
// 	//的while循环
// 	P0=0xff;
// 	rs=0; //设置命令操作
// 	rw=1; //设置读操作
// 	lcden=1; //使能
// 	delay(200);
// 	while(temp & 0x80) //判忙，一旦表达式为假，即temp最高位为0，
// 	//则表示1602不忙，跳出while.
// 	{temp=P0;delay(20);} //把p0的的高位读入temp,延时
// 	lcden=0; //关闭使能信号
// }
#endif